{"version":3,"sources":["./src/app/userpage/equal-validator.directive.ts","./src/app/userpage/user.component.html","./src/app/userpage/user.component.ts","./src/app/userpage/user.module.ts","./src/app/userpage/user.routing.ts"],"names":[],"mappings":"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","file":"user.module.chunk.js","sourcesContent":["import { Directive, forwardRef, Attribute } from '@angular/core';\nimport { Validator, AbstractControl, NG_VALIDATORS } from '@angular/forms';\n\n@Directive({\n    selector: '[validateEqual][formControlName],[validateEqual][formControl],[validateEqual][ngModel]',\n    providers: [\n        { provide: NG_VALIDATORS, useExisting: forwardRef(() => EqualValidator), multi: true }\n    ]\n})\n\nexport class EqualValidator implements Validator {\n    constructor( @Attribute('validateEqual') public validateEqual: string,\n        @Attribute('reverse') public reverse: string) {\n    }\n\n    private get isReverse() {\n        if (!this.reverse) return false;\n        return this.reverse === 'true' ? true: false;\n    }\n\n    validate(c: AbstractControl): { [key: string]: any } {\n        // self value\n        let v = c.value;\n\n        // control vlaue\n        let e = c.root.get(this.validateEqual);\n\n        // value not equal\n        if (e && v !== e.value && !this.isReverse) {\n          return {\n            validateEqual: false\n          }\n        }\n\n        // value equal and reverse\n        if (e && v === e.value && this.isReverse) {\n            delete e.errors['validateEqual'];\n            if (!Object.keys(e.errors).length) e.setErrors(null);\n        }\n\n        // value not equal and reverse\n        if (e && v !== e.value && this.isReverse) {\n            e.setErrors({\n                validateEqual: false\n            })\n        }\n\n        return null;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/userpage/equal-validator.directive.ts","module.exports = \"<div class=\\\"main-content\\\">\\n    <div class=\\\"container-fluid\\\">\\n        <div class=\\\"row \\\">\\n\\n            <div class=\\\"col-lg-offset-3 col-lg-6\\\">\\n                <div class=\\\"card\\\">\\n                    <div class=\\\"card-header\\\">\\n                        <h4 class=\\\"card-title\\\" i18n=\\\"@@change_password_title\\\">Change Password</h4>\\n                    </div>\\n                    <div class=\\\"card-content\\\">\\n                        <form method=\\\"post\\\" #f=\\\"ngForm\\\" novalidate (ngSubmit)=\\\"updatePassword(f.valid, f)\\\">\\n                            <div class=\\\"row\\\">\\n\\n                                <div class=\\\"col-md-12\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label><ng-container i18n=\\\"@@current_password\\\">Current Password</ng-container>\\n                                            <span class=\\\"star\\\">*</span>\\n                                        </label>\\n\\n                                        <input required name=\\\"currentPassword\\\" type=\\\"password\\\" class=\\\"form-control border-input\\\" [(ngModel)]=\\\"currentPassword\\\" #currentPass=\\\"ngModel\\\"\\n                                        />\\n\\n                                        <small [hidden]=\\\"currentPass.valid || (currentPass.pristine && !f.submitted)\\\" class=\\\"text-danger\\\">\\n                                            Current password is required.\\n                                        </small>\\n\\n                                    </div>\\n                                </div>\\n\\n                                <div class=\\\"col-md-12\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label><ng-container i18n=\\\"@@new_password\\\">New Password</ng-container>\\n                                            <span class=\\\"star\\\">*</span>\\n                                        </label>\\n                                        <input required name=\\\"newPassword\\\" type=\\\"password\\\" class=\\\"form-control border-input\\\"\\n                                             [(ngModel)]=\\\"newPassword\\\"  reverse=\\\"true\\\" #newPass=\\\"ngModel\\\"\\n                                            validateEqual=\\\"newPasswordAgain\\\" minlength=\\\"7\\\">\\n                                        <small i18n=\\\"@@passwordRequired\\\" [hidden]=\\\"newPass.valid || (newPass.pristine && !f.submitted)\\\" class=\\\"text-danger\\\">\\n                                                Password should be at least 7 characters\\n                                        </small>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"col-md-12\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label for=\\\"exampleInputEmail1\\\" i18n=\\\"@@confirmNewPassword\\\">Confirm New Password\\n                                            <span class=\\\"star\\\">*</span>\\n                                        </label>\\n                                        <input required name=\\\"newPasswordAgain\\\" type=\\\"password\\\" class=\\\"form-control border-input\\\"\\n                                             [(ngModel)]=\\\"newPasswordAgain\\\" reverse=\\\"false\\\" #newPassAgain=\\\"ngModel\\\"\\n                                            validateEqual=\\\"newPassword\\\">\\n                                        <small i18n=\\\"@@password_mismatch\\\" [hidden]=\\\"newPassAgain.valid || (newPassAgain.pristine && !f.submitted)\\\" class=\\\"text-danger\\\">\\n                                            Password mismatch\\n                                        </small>\\n                                    </div>\\n                                </div>\\n\\n                                <div class=\\\"col-md-12 form-group text-center text-danger\\\" i18n=\\\"@@makeSureCurrentPasswordIsCorrect\\\" [hidden]=\\\"!showPasswordNotChangedError\\\">\\n                                    Make sure you that current password is entered correctly.\\n                                </div>\\n                                <div class=\\\"col-md-12 form-group text-center text-success\\\" [hidden]=\\\"!showYourPasswordChanged\\\" i18n=\\\"@@yourPasswordChanged\\\" [hidden]=\\\"!showPasswordNotChangedError\\\">\\n                                    Your password has beed changed\\n                                 </div>\\n                            </div>\\n                            <div class=\\\"text-center\\\">\\n                                <button type=\\\"submit\\\" class=\\\"btn btn-info btn-fill btn-wd\\\" i18n=\\\"@@update_button_label\\\">Update</button>\\n                            </div>\\n                            <div class=\\\"clearfix\\\"></div>\\n                            \\n                        </form>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/userpage/user.component.html\n// module id = ./src/app/userpage/user.component.html\n// module chunks = user.module","import { Component } from '@angular/core';\nimport { AuthService } from '../rest/auth.service';\nimport { NgForm } from '@angular/forms';\n\ndeclare var $: any;\n\n@Component({\n    moduleId: module.id,\n    selector: 'user-cmp',\n    templateUrl: 'user.component.html'\n})\n\nexport class UserComponent{\n\n    public currentPassword: string;\n    public newPassword: string;\n    public newPasswordAgain: string;\n    public showPasswordNotChangedError: boolean;\n    public showYourPasswordChanged: boolean;\n\n    constructor(private auth: AuthService) {\n        this.showPasswordNotChangedError = false;\n        this.showYourPasswordChanged = false;\n    }\n\n\n    updatePassword(isValid: boolean, form: NgForm):void {\n        if (!isValid) {\n            return;\n        }\n        \n        this.auth.changeUserPassword(\"nope\", this.currentPassword, this.newPasswordAgain)\n                .subscribe(data => {\n                  \n                    console.log(data);\n                    if (data[\"success\"]) {\n                        form.resetForm();\n                        this.showYourPasswordChanged = true;\n                        this.showPasswordNotChangedError = false;\n\n\n                    }\n                    else {\n                        this.showPasswordNotChangedError = true;\n                    }\n                    \n                });\n    }\n\n }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/userpage/user.component.ts","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { EqualValidator } from './equal-validator.directive';\n\nimport { UserComponent } from './user.component';\nimport { UserRoutes } from './user.routing';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        RouterModule.forChild(UserRoutes),\n        FormsModule\n    ],\n    declarations: [UserComponent, EqualValidator]\n})\n\nexport class UserModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/userpage/user.module.ts","import { Routes } from '@angular/router';\n\nimport { UserComponent } from './user.component';\n\nexport const UserRoutes: Routes = [{\n    path: '',\n    children: [{\n        path: 'pages/changepass',\n        component: UserComponent\n    }]\n}];\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/userpage/user.routing.ts"],"sourceRoot":"webpack:///"}
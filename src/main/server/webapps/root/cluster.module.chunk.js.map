{"version":3,"sources":["./src/app/cluster/cluster.component.css","./src/app/cluster/cluster.component.html","./src/app/cluster/cluster.component.ts","./src/app/cluster/cluster.module.ts","./src/app/cluster/create-node-dialog.html","./src/app/cluster/edit-node-dialog.html"],"names":[],"mappings":"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","file":"cluster.module.chunk.js","sourcesContent":["module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/cluster/cluster.component.css\n// module id = ./src/app/cluster/cluster.component.css\n// module chunks = cluster.module","module.exports = \"<div class=\\\"main-content\\\">\\n    <div class=\\\"container-fluid\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-lg-12 col-sm-12\\\">\\n                <div class=\\\"card\\\">\\n                    <div class=\\\"card-content\\\">\\n                       \\n                                <div class=\\\"container\\\">\\n\\n                                </div>\\n\\n                                <div class=\\\" text-right\\\">\\n\\n                                    <div>\\n                                        <button class=\\\"btn btn-fill btn-success\\\" (click)=\\\"openNodeCreateDialog()\\\"\\n                                                data-toggle=\\\"dropdown\\\" role=\\\"button\\\">Add\\n                                        </button>\\n                                    </div>\\n\\n                                </div>\\n\\n                                <div id=\\\"nodeTable\\\" style=\\\"text-align: left\\\"\\n                                     *ngIf=\\\" nodeTableData.dataRows.length>0\\\">\\n\\n                                    <br>\\n                                    <div class=\\\"mat-container mat-elevation-z1\\\">\\n\\n                                        <mat-table [dataSource]=\\\"dataSourceNode\\\">\\n\\n                                            <!-- >ng-container matColumnDef=\\\"nodeId\\\">\\n                                                <mat-header-cell *matHeaderCellDef> Node ID </mat-header-cell>\\n\\n                                                <mat-cell *matCellDef=\\\"let row\\\">\\n\\n                                                    <ng-container [ngSwitch]=\\\"row.type\\\">\\n                                                        <i> {{row.id}}</i>\\n                                                    </ng-container>\\n\\n                                                </mat-cell>\\n\\n                                            </ng-container  -->\\n\\n                                            <ng-container matColumnDef=\\\"nodeIp\\\">\\n                                                <mat-header-cell *matHeaderCellDef> Node IP </mat-header-cell>\\n\\n                                                <mat-cell *matCellDef=\\\"let row\\\">\\n                                                    {{row.ip}}\\n\\n                                                </mat-cell>\\n                                            </ng-container>\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\n                                            <!--  >ng-container matColumnDef=\\\"status\\\">\\n                                                <mat-header-cell *matHeaderCellDef> Status </mat-header-cell>\\n\\n                                                <mat-cell *matCellDef=\\\"let row\\\">\\n                                                    {{row.status}}\\n\\n                                                </mat-cell>\\n                                            </ng-container  -->\\n                                            \\n                                            <ng-container matColumnDef=\\\"lastUpdateTime\\\">\\n                                                <mat-header-cell *matHeaderCellDef> Last Update </mat-header-cell>\\n\\n                                                <mat-cell *matCellDef=\\\"let row\\\">\\n                                                \\t{{row.lastUpdateTime | date:'yyyy-MM-dd HH:mm:ss'}}\\n                                                </mat-cell>\\n                                            </ng-container>\\n                                            \\n                                            <ng-container matColumnDef=\\\"cpu\\\">\\n                                                <mat-header-cell *matHeaderCellDef> CPU Usage (%) </mat-header-cell>\\n\\n                                                <mat-cell *matCellDef=\\\"let row\\\">\\n                                                \\t{{row.cpu}}\\n                                                </mat-cell>\\n                                            </ng-container>\\n                                            \\n                                            <ng-container matColumnDef=\\\"memory\\\">\\n                                                <mat-header-cell *matHeaderCellDef> Memory Usage (MB) </mat-header-cell>\\n\\n                                                <mat-cell *matCellDef=\\\"let row\\\">\\n                                                \\t{{row.memory}}\\n                                                </mat-cell>\\n                                            </ng-container>\\n                                            \\n                                            <ng-container matColumnDef=\\\"inTheCluster\\\">\\n                                                <mat-header-cell *matHeaderCellDef> Alive </mat-header-cell>\\n\\n                                                <mat-cell *matCellDef=\\\"let row\\\">\\n                                                    {{row.inTheCluster}}\\n\\n                                                </mat-cell>\\n                                            </ng-container>\\n\\n                                            <ng-container matColumnDef=\\\"actions\\\">\\n                                                <mat-header-cell *matHeaderCellDef> Actions</mat-header-cell>\\n\\n                                                <mat-cell *matCellDef=\\\"let row\\\">\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\n                                                    <!-- button (click)=\\\"openNodeEditDialog(row.id)\\\"\\n                                                            class=\\\"btn btn-success btn-simple btn-magnify\\\"\\n                                                            type=\\\"button\\\">\\n                                                        <span class=\\\"btn-label\\\">\\n                                                            <i class=\\\"ti-pencil\\\"></i>\\n                                                        </span>\\n                                                        <ng-container i18n=\\\"@@editNodeButton\\\">Edit</ng-container>\\n                                                    </button -->\\n                                                    <button (click)=\\\"deleteNode(row.id)\\\" class=\\\"btn btn-simple btn-magnify btn-danger\\\" type=\\\"button\\\">\\n                                                        <span class=\\\"btn-label\\\">\\n                                                            <i class=\\\"ti-close\\\"></i>\\n                                                        </span>\\n                                                        <ng-container i18n=\\\"@@deleteNodeButton\\\">Delete</ng-container>\\n                                                    </button>\\n\\n                                                </mat-cell>\\n                                            </ng-container>\\n\\n                                            <mat-header-row *matHeaderRowDef=\\\"nodeColumns\\\"></mat-header-row>\\n                                            <mat-row *matRowDef=\\\"let row; columns: nodeColumns;\\\">\\n                                            </mat-row>\\n                                        </mat-table>\\n\\n\\n                                        <mat-paginator [length]=\\\"nodeLength\\\"\\n                                                       [pageSize]=\\\"pageSize\\\"\\n                                                       [pageSizeOptions]=\\\"pageSizeOptions\\\"\\n                                                       (page)=\\\"onPaginateChange($event)\\\"\\n                                        >\\n                                        </mat-paginator>\\n\\n\\n                                    </div>\\n\\n                                </div>\\n\\n\\n                                <p *ngIf=\\\"nodeTableData.dataRows.length == 0\\\" i18n=\\\"no cluster node | text messages appears when no node@@noNodeExistsMessage\\\">\\n                                    There is no cluster node.\\n                                </p>\\n                        <div class=\\\"footer\\\">\\n                            <!--\\n                        <hr />\\n\\n                        <div class=\\\"stats\\\">\\n                               <button class=\\\"btn btn-primary btn-simple btn-sm\\\" (click)=\\\"updateCPULoad()\\\">\\n                                   <i class=\\\"ti-reload\\\"></i>Update now</button>\\n                        </div>\\n                    -->\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/cluster/cluster.component.html\n// module id = ./src/app/cluster/cluster.component.html\n// module chunks = cluster.module","import {\n    AfterViewInit,\n    ChangeDetectorRef,\n    Component,\n    EventEmitter,\n    Inject,\n    Input,\n    OnDestroy,\n    OnInit,\n    Output,\n    Renderer,\n    ViewChild\n} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {HTTP_SERVER_ROOT, ClusterRestService, SERVER_ADDR} from '../rest/cluster.service';\nimport {Locale} from \"../locale/locale\";\nimport {\n    MAT_DIALOG_DATA,\n    MatDialog,\n    MatDialogRef,\n    MatPaginatorIntl,\n    MatSort,\n    MatTableDataSource,\n    PageEvent\n} from '@angular/material';\nimport \"rxjs/add/operator/toPromise\";\nimport {\n    ClusterInfoTable,\n    ClusterNode,\n    ClusterNodeInfo\n} from './cluster.definitions';\n\ndeclare var $: any;\ndeclare var Chartist: any;\ndeclare var swal: any;\ndeclare var classie: any;\n\ndeclare function require(name: string);\n\n\n@Component({\n  selector: 'app-cluster',\n  templateUrl: './cluster.component.html',\n  styleUrls: ['./cluster.component.css']\n})\n\n\nexport class ClusterComponent implements OnInit, OnDestroy, AfterViewInit {\n\n    public nodeTableData: ClusterInfoTable;\n    public timerId: any;\n \n    public nodeColumns = ['nodeIp', 'lastUpdateTime', 'cpu', 'memory', 'inTheCluster', 'actions'];\n\n    public dataSourceNode: MatTableDataSource<ClusterNodeInfo>;\n\n    public pageSize = 5;\n    public pageSizeOptions = [5, 10, 25];\n    public pageIndex = 0;\n    public nodeLength: any;\n\n    // MatPaginator Output\n\n    @Input() pageEvent: PageEvent;\n\n    @Output()\n    pageChange: EventEmitter<PageEvent>;\n\n\n    // @ViewChild(MatPaginator) paginator: MatPaginator;\n    @ViewChild(MatSort) sort: MatSort;\n\n\n    constructor(private http: HttpClient, \n    \t\t\tprivate route: ActivatedRoute,\n                private clusterRestService: ClusterRestService,\n                private renderer: Renderer,\n                public router: Router,\n                public dialog: MatDialog,\n                private cdr: ChangeDetectorRef,\n                private matpage: MatPaginatorIntl,\n    ) {\n        this.dataSourceNode = new MatTableDataSource<ClusterNodeInfo>();\n\n    }\n\n    setPageSizeOptions(setPageSizeOptionsInput: string) {\n        this.pageSizeOptions = setPageSizeOptionsInput.split(',').map(str => +str);\n    }\n\n    ngOnInit() {\n\n        var self = this;\n\n       this.nodeTableData = {\n            dataRows: []\n        };\n    }\n\n    onPaginateChange(event) {\n        console.log(\"page index:\" + event.pageIndex);\n        console.log(\"length:\" + event.length);\n        console.log(\"page size:\" + event.pageSize);\n\n        this.pageIndex = event.pageIndex;\n        this.updateTable();\n    }\n\n    ngAfterViewInit() {\n\n        setTimeout(() => {\n            this.getClusterNodes(); \n        }, 500);\n\n\t\tthis.timerId = window.setInterval(() => {\n        \tthis.getClusterNodes();\n        }, 10000);\n    }\n\n    ngOnDestroy() {\n        if (this.timerId) {\n            clearInterval(this.timerId);\n        }\n    }\n\n    updateTable()\n    {\n    \tvar start = this.pageIndex * this.pageSize;\n    \tvar end = start + this.pageSize; \n    \tthis.dataSourceNode = new MatTableDataSource(this.nodeTableData.dataRows.slice(start, end));\n    }\n   \n    getClusterNodes(): void {\n        this.clusterRestService.getClusterNodes().subscribe(data => {\n            this.nodeTableData.dataRows = [];\n            for (var i in data) {\n                this.nodeTableData.dataRows.push(data[i]);\n            }\n        \tthis.nodeLength = this.nodeTableData.dataRows.length;\n        \tthis.updateTable();\n        });\n    }\n\n    openNodeEditDialog(nodeId: string): void {\n    \tlet node = this.nodeTableData.dataRows.find(n => n.id == nodeId);\n\n\n     \tlet dialogRef = this.dialog.open(EditNodeComponent, {\n            data: { \n            \tnode: node,\n             },\n            width: '300px'\n\n        });\n\n\n        dialogRef.afterClosed().subscribe(result => {\n            console.log('The dialog was closed');\n            this.getClusterNodes();\n        });   \n    }\n\n    openNodeCreateDialog(): void {\n    \t\n     \tlet dialogRef = this.dialog.open(CreateNodeComponent, {\n            data: { \n            \t\n             },\n            width: '300px'\n\n        });\n\n\n        dialogRef.afterClosed().subscribe(result => {\n            console.log('The dialog was closed');\n            this.getClusterNodes();\n        });   \n    }\n\n\n    deleteNode(nodeId: string): void {\n\n\n        swal({\n            title: Locale.getLocaleInterface().are_you_sure,\n            text: Locale.getLocaleInterface().wont_be_able_to_revert,\n            type: 'warning',\n            showCancelButton: true,\n            confirmButtonColor: '#3085d6',\n            cancelButtonColor: '#d33',\n            confirmButtonText: 'Yes, delete it!'\n        }).then(() => {\n\t\t\n    \t\tlet node = this.nodeTableData.dataRows.find(n => n.id == nodeId);\n\n            this.clusterRestService.deleteClusterNodes(node).subscribe(data => {\n                if (data[\"success\"] == true) {\n\n                }\n                else {\n                    this.showNodeNotDeleted();\n                };\n                this.getClusterNodes();\n            });\n\n        }).catch(function () {\n\n        });\n  \n    }\n\n    showNodeNotDeleted() {\n        \n    \t$.notify({\n            icon: \"ti-save\",\n            message: \"Node can not be deleted.\"\n        }, {\n            type: \"warning\",\n            delay: 900,\n            placement: {\n                from: 'top',\n                align: 'right'\n            }\n        });\n    }\n}\n\n\n\n\n@Component({\n    selector: 'edit-node-dialog',\n    templateUrl: 'edit-node-dialog.html',\n})\n\n\nexport class EditNodeComponent {\n\n\n\tpublic node : ClusterNodeInfo;\n\tpublic progressing = false;\n\n    constructor(\n        public dialogRef: MatDialogRef<EditNodeComponent>, \n        public clusterRestService: ClusterRestService,\n        @Inject(MAT_DIALOG_DATA) public data: any) {\n\n    \tthis.node = data.node;\n\n    }\n\n    cancel(): void {\n        this.dialogRef.close();\n    }\n\n\n    updateNode() {\n\n    \t\tthis.progressing = true;\n    \t\t\n            this.clusterRestService.updateClusterNodes(this.node).subscribe(data => {\n\n                if (data[\"success\"] == true) {\n\n                    this.progressing = false;\n\n                    this.dialogRef.close();\n                    swal({\n                        type: \"success\",\n                        title: \" Node is successfully updated!\",\n                        buttonsStyling: false,\n                        confirmButtonClass: \"btn btn-success\"\n\n                    });\n\n                } \n                 else {\n                    this.progressing = false;\n\n                    this.dialogRef.close();\n                    swal({\n                        type: \"error\",\n                        title: \"An Error Occured!\",\n\n                        buttonsStyling: false,\n                        confirmButtonClass: \"btn btn-error\"\n\n                    });\n\n\n                }\n                \n            });\n        }\n}\n\n\n\n@Component({\n    selector: 'create-node-dialog',\n    templateUrl: 'create-node-dialog.html',\n})\n\n\nexport class CreateNodeComponent {\n\n\n\tpublic node : ClusterNodeInfo;\n\tpublic progressing = false;\n\n    constructor(\n        public dialogRef: MatDialogRef<CreateNodeComponent>, \n        public clusterRestService: ClusterRestService,\n        @Inject(MAT_DIALOG_DATA) public data: any) {\n    \t\n    \tthis.node = {id:'', ip:'', status: '', lastUpdateTime: \"\", inTheCluster: \"\", memory: \"\", cpu:\"\"};\n    }\n\n    cancel(): void {\n        this.dialogRef.close();\n    }\n\n\n        createNode() {\n\n    \t\tthis.progressing = true;\n    \t\t\n            this.clusterRestService.addClusterNodes(this.node).subscribe(data => {\n\n                if (data[\"success\"] == true) {\n\n                    this.progressing = false;\n\n                    this.dialogRef.close();\n                    swal({\n                        type: \"success\",\n                        title: \" Node is successfully added!\",\n                        buttonsStyling: false,\n                        confirmButtonClass: \"btn btn-success\"\n\n                    });\n\n                } \n                 else {\n                    this.progressing = false;\n\n                    this.dialogRef.close();\n                    swal({\n                        type: \"error\",\n                        title: \"An Error Occured!\",\n\n                        buttonsStyling: false,\n                        confirmButtonClass: \"btn btn-error\"\n\n                    });\n\n\n                }\n                \n            });\n        }\n\n}\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/cluster/cluster.component.ts","import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\nimport {CreateNodeComponent, EditNodeComponent} from './cluster.component';\n\nimport {HttpClientModule} from '@angular/common/http';\nimport {ClusterComponent} from './cluster.component';\nimport {\n    MatAutocompleteModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatFormFieldModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatStepperModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule\n} from '@angular/material';\n\nexport const ClusterRoutes: Routes = [\n    {\n        path: '',\n        component: ClusterComponent, //redirects to first app\n        pathMatch: 'full',\n    },\n    ];\n\n\n\n@NgModule({\n\n    declarations: [\n        ClusterComponent, \n        CreateNodeComponent,\n        EditNodeComponent\n    ],\n\n    entryComponents: [\n        CreateNodeComponent,\n        EditNodeComponent\n\n    ],\n\n    imports: [\n        RouterModule.forChild(ClusterRoutes),\n        CommonModule,\n        MatFormFieldModule,\n        MatInputModule,\n\n        MatCheckboxModule,\n        MatDialogModule,\n        FormsModule,\n        HttpClientModule,\n        MatDialogModule,\n        MatCheckboxModule,\n        MatInputModule,\n        MatAutocompleteModule,\n        MatButtonModule,\n        MatButtonToggleModule,\n        MatCardModule,\n        MatChipsModule,\n        MatDatepickerModule,\n        MatDividerModule,\n        MatExpansionModule,\n        MatGridListModule,\n        MatIconModule,\n        MatListModule,\n        MatMenuModule,\n        MatNativeDateModule,\n        MatPaginatorModule,\n        MatProgressBarModule,\n        MatProgressSpinnerModule,\n        MatRadioModule,\n        MatRippleModule,\n        MatSelectModule,\n        MatSidenavModule,\n        MatSliderModule,\n        MatSlideToggleModule,\n        MatSnackBarModule,\n        MatSortModule,\n        MatStepperModule,\n        MatTableModule,\n        MatTabsModule,\n        MatToolbarModule,\n        MatTooltipModule\n    ],\n\n    exports: \n    [\n        MatCheckboxModule, \n        MatDialogModule, \n        MatFormFieldModule, \n        MatInputModule,\n        MatDialogModule,\n        MatCheckboxModule,\n        MatFormFieldModule,\n        MatInputModule,\n        MatAutocompleteModule,\n        MatButtonModule,\n        MatButtonToggleModule,\n        MatCardModule,\n        MatChipsModule,\n        MatDatepickerModule,\n        MatDividerModule,\n        MatExpansionModule,\n        MatGridListModule,\n        MatIconModule,\n        MatListModule,\n        MatMenuModule,\n        MatNativeDateModule,\n        MatPaginatorModule,\n        MatProgressBarModule,\n        MatProgressSpinnerModule,\n        MatRadioModule,\n        MatRippleModule,\n        MatSelectModule,\n        MatSidenavModule,\n        MatSliderModule,\n        MatSlideToggleModule,\n        MatSnackBarModule,\n        MatSortModule,\n        MatStepperModule,\n        MatTableModule,\n        MatTabsModule,\n        MatToolbarModule,\n        MatTooltipModule\n    ],\n\n})\n\nexport class ClusterModule {\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/cluster/cluster.module.ts","module.exports = \"\\n\\n<div >\\n    <td colspan=\\\"4\\\" style=\\\"border-top:0px\\\">\\n        <form method=\\\"post\\\" #f=\\\"ngForm\\\">\\n\\n            <div class=\\\"card-content\\\" style=\\\"padding-top:0px\\\">\\n                <h4 class=\\\"card-title text-left\\\" i18n=\\\"@@editNodeCardTitle\\\">\\n                    Create Node\\n                </h4>\\n                <div class=\\\"form-group text-left\\\">\\n                    <label i18n=\\\"@@newNodeId\\\">Id</label>\\n                    <input type=\\\"text\\\" required minlength=\\\"4\\\" name=\\\"nodeId\\\" i18n-placeholder=\\\"@@node_id_place_holder\\\" placeholder=\\\"Node ID\\\"\\n                           class=\\\"form-control\\\" [(ngModel)]=\\\"node.id\\\" #nodeId=\\\"ngModel\\\">\\n                </div>\\n                <div class=\\\"form-group text-left\\\">\\n                    <label i18n=\\\"@@newNodeIp\\\">Ip</label>\\n                    <input type=\\\"text\\\" required minlength=\\\"4\\\" name=\\\"nodeIp\\\" i18n-placeholder=\\\"@@node_ip_place_holder\\\" placeholder=\\\"Node IP\\\"\\n                           class=\\\"form-control\\\" [(ngModel)]=\\\"node.ip\\\" #nodeIp=\\\"ngModel\\\">\\n                </div>\\n                \\n\\n                <div class=\\\"form-group text-center\\\">\\n\\n                    <button type=\\\"submit\\\" [disabled]='progressing' class=\\\"btn btn-fill btn-success\\\" i18n=\\\"@@newNodeSaveButton\\\" (click)=\\\"createNode()\\\">\\n                        <i class=\\\"fa fa-spinner fa-pulse fa-1x fa-fw\\\" *ngIf=\\\"progressing\\\" aria-hidden=\\\"true\\\"></i>Save</button>\\n\\n                    <button type=\\\"button\\\" class=\\\"btn btn-simple\\\" i18n=\\\"@@newNodeCancelButton\\\" (click)=\\\"cancel()\\\">Cancel</button>\\n                </div>\\n\\n            </div>\\n\\n        </form>\\n    </td>\\n</div>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/cluster/create-node-dialog.html\n// module id = ./src/app/cluster/create-node-dialog.html\n// module chunks = cluster.module","module.exports = \"\\n\\n<div >\\n    <td colspan=\\\"4\\\" style=\\\"border-top:0px\\\">\\n        <form method=\\\"post\\\" #f=\\\"ngForm\\\">\\n\\n            <div class=\\\"card-content\\\" style=\\\"padding-top:0px\\\">\\n                <h4 class=\\\"card-title text-left\\\" i18n=\\\"@@editNodeCardTitle\\\">\\n                    Edit Node\\n                </h4>\\n                <div class=\\\"form-group text-left\\\">\\n                    <label i18n=\\\"@@newNodeId\\\">Id</label>\\n                    <input type=\\\"text\\\" disabled name=\\\"nodeId\\\" i18n-placeholder=\\\"@@node_id_place_holder\\\" placeholder=\\\"Node ID\\\"\\n                           class=\\\"form-control\\\" [(ngModel)]=\\\"node.id\\\" #nodeId=\\\"ngModel\\\">\\n                </div>\\n                <div class=\\\"form-group text-left\\\">\\n                    <label i18n=\\\"@@newNodeIp\\\">Ip</label>\\n                    <input type=\\\"text\\\" required minlength=\\\"4\\\" name=\\\"nodeIp\\\" i18n-placeholder=\\\"@@node_ip_place_holder\\\" placeholder=\\\"Node IP\\\"\\n                           class=\\\"form-control\\\" [(ngModel)]=\\\"node.ip\\\" #nodeIp=\\\"ngModel\\\">\\n                </div>\\n                \\n\\n                <div class=\\\"form-group text-center\\\">\\n\\n                    <button type=\\\"submit\\\" [disabled]='progressing' class=\\\"btn btn-fill btn-success\\\" i18n=\\\"@@newNodeSaveButton\\\" (click)=\\\"updateNode()\\\">\\n                        <i class=\\\"fa fa-spinner fa-pulse fa-1x fa-fw\\\" *ngIf=\\\"progressing\\\" aria-hidden=\\\"true\\\"></i>Save</button>\\n\\n                    <button type=\\\"button\\\" class=\\\"btn btn-simple\\\" i18n=\\\"@@newNodeCancelButton\\\" (click)=\\\"cancel()\\\">Cancel</button>\\n                </div>\\n\\n            </div>\\n\\n        </form>\\n    </td>\\n</div>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/cluster/edit-node-dialog.html\n// module id = ./src/app/cluster/edit-node-dialog.html\n// module chunks = cluster.module"],"sourceRoot":"webpack:///"}